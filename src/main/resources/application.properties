server.port=${APPLICATION_PORT:8092}
logging.level.root=${LOG_LEVEL:INFO}
logging.level.org.springframework.security=${LOG_LEVEL:INFO}
logging.level.ca.uhn.fhir=${HAPI_FHIR_CLIENT_LOG_LEVEL:OFF}
logging.level.org.hl7.fhir=${HAPI_FHIR_CLIENT_LOG_LEVEL:OFF}

server.tomcat.max-http-header-size=65536

spring.flyway.locations=classpath:db/migration
spring.flyway.enabled=${EXPORTER_DB_FLYWAY_MIGRATION_ENABLED:true}
spring.flyway.url=${EXPORTER_DB_URL:jdbc:postgresql://localhost:5432/exporter}
spring.flyway.user=${EXPORTER_DB_USER:exporter}
spring.flyway.password=${EXPORTER_DB_PASSWORD:exporter}
spring.flyway.default-schema=samply

spring.datasource.url=${EXPORTER_DB_URL:jdbc:postgresql://localhost:5432/exporter}
spring.datasource.username=${EXPORTER_DB_USER:exporter}
spring.datasource.password=${EXPORTER_DB_PASSWORD:exporter}
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=none
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.database=postgresql
spring.jpa.show-sql=${HIBERNATE_LOG:false}

#https://springdoc.org/
springdoc.api-docs.path=/api-docs
springdoc.api-docs.enabled=true
springdoc.swagger-ui.path=/swagger-ui.html

#logging.level.org.springframework=DEBUG

# security OIDC config
spring.security.oauth2.resourceserver.jwt.issuer-uri=${OIDC_URL}/realms/${OIDC_REALM}
spring.security.oauth2.client.provider.oidc.issuer-uri=${OIDC_URL}/realms/${OIDC_REALM}
spring.security.oauth2.client.provider.oidc.authorization-uri=${spring.security.oauth2.client.provider.oidc.issuer-uri}/protocol/openid-connect/auth
spring.security.oauth2.client.provider.oidc.token-uri=${spring.security.oauth2.client.provider.oidc.issuer-uri}/protocol/openid-connect/token
spring.security.oauth2.client.provider.oidc.user-info-uri=${spring.security.oauth2.client.provider.oidc.issuer-uri}/protocol/openid-connect/userinfo
spring.security.oauth2.client.provider.oidc.jwk-set-uri=${spring.security.oauth2.client.provider.oidc.issuer-uri}/protocol/openid-connect/certs
spring.security.oauth2.client.provider.oidc.user-name-attribute=email

spring.security.oauth2.client.registration.oidc.client-id=${OIDC_CLIENT_ID}
spring.security.oauth2.client.registration.oidc.client-secret=${OIDC_CLIENT_SECRET:}
spring.security.oauth2.client.registration.oidc.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.oidc.redirect-uri="{baseUrl}/{action}/oauth2/code/{registrationId}"
spring.security.oauth2.client.registration.oidc.scope=email,profile,openid


#spring.security.oauth2.client.registration.authentik.client-id=
#spring.security.oauth2.client.registration.authentik.client-secret=
#spring.security.oauth2.client.registration.authentik.scope=
#spring.security.oauth2.client.registration.authentik.authorization-grant-type=

#spring.security.oauth2.client.provider.authentik.token-uri=
#spring.security.oauth2.client.provider.authentik.jwk-set-uri=